name: windows

# build on c/cpp changes or workflow changes
on:
  push:
    paths:
      - 'lib/**.[ch]'
      - 'lib/**.cpp'
      - 'src/**.[ch]'
      - 'src/**.cpp'
      - 'irr/**.[ch]'
      - 'irr/**.cpp'
      - '**/CMakeLists.txt'
      - 'cmake/Modules/**'
      - 'po/**.po'
      - 'util/buildbot/**'
      - 'misc/*.manifest'
      - '.github/workflows/windows.yml'
  pull_request:
    paths:
      - 'lib/**.[ch]'
      - 'lib/**.cpp'
      - 'src/**.[ch]'
      - 'src/**.cpp'
      - 'irr/**.[ch]'
      - 'irr/**.cpp'
      - '**/CMakeLists.txt'
      - 'cmake/Modules/**'
      - 'po/**.po'
      - 'util/buildbot/**'
      - 'misc/*.manifest'
      - '.github/workflows/windows.yml'

jobs:
  mingw:
    name: "MinGW cross-compiler (64-bit)"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends gettext wine wine64
          sudo ./util/buildbot/download_toolchain.sh /usr
      - name: Build
        run: |
           EXISTING_MINETEST_DIR=$PWD \
           ./util/buildbot/buildwin64.sh B
      # Check that the resulting binary can run (DLLs etc.)
      - name: Runtime test
        run: |
          dest=$(mktemp -d)
          unzip -q -d "$dest" B/build/*.zip
          cd "$dest"/luanti-*-win*
          wine bin/luanti.exe --version
      - uses: actions/upload-artifact@v4
        with:
          name: "mingw64"
          path: B/build/*.zip
          if-no-files-found: error

  msvc:
    name: VS 2019 x64-portable
    runs-on: windows-2019
    env:
      VCPKG_VERSION: 01f602195983451bc83e72f4214af2cbc495aa94
      vcpkg_packages: zlib zstd curl[winssl] openal-soft libvorbis libogg libjpeg-turbo sqlite3 freetype luajit gmp jsoncpp sdl2
    steps:
      - uses: actions/checkout@v4

      - name: Restore from cache and run vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          vcpkgArguments: ${{env.vcpkg_packages}}
          vcpkgDirectory: '${{ github.workspace }}\vcpkg'
          appendedCacheKey: x64-windows
          vcpkgGitCommitId: ${{ env.VCPKG_VERSION }}
          vcpkgTriplet: x64-windows

      - name: CMake
        run: |
          cmake -G'Visual Studio 16 2019' -A x64 `
          -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake"  `
          -DCMAKE_BUILD_TYPE=Release  `
          -DENABLE_POSTGRESQL=OFF  `
          -DENABLE_LUAJIT=TRUE  `
          -DREQUIRE_LUAJIT=TRUE  `
          -DRUN_IN_PLACE=TRUE .
      - name: Build
        run: cmake --build . --config Release

      - name: Unittests
        run: |
          $proc = start .\bin\Release\luanti.exe --run-unittests -NoNewWindow -Wait -PassThru
          exit $proc.ExitCode
        continue-on-error: true # FIXME!!

      - name: CPack
        run: |
          cpack -G ZIP -B "$env:GITHUB_WORKSPACE\Package"
          rm -r $env:GITHUB_WORKSPACE\Package\_CPack_Packages
      - uses: actions/upload-artifact@v4
        with:
          name: msvc-x64-portable
          path: .\Package\*.zip
